@TechReport{EPFL-REPORT-170040,
   abstract    = {Developing modern software applications typically
                 involves composing functionality from existing libraries.
                 This task is difficult because libraries may expose many
                 methods to the developer. To help developers in such
                 scenarios, we present a technique that synthesizes and
                 suggests valid expressions of a given type at a given
                 program point. The technique generates expressions by
                 taking into account 1) polymorphic type constraints of
                 the values in scope, 2) the API usage patterns in a
                 corpus of code, and 3) any available test cases. It
                 supports polymorphic type declarations and can synthesize
                 expressions containing methods with any number of
                 arguments and any depth. Our synthesis approach is based
                 on a quantitative generalization of the type inhabitation
                 problem with weighted type assignments. Weights indicate
                 preferences to certain type bindings; they guide the
                 search and enable the ranking of solutions. We present a
                 new polynomial-time algorithm for a restricted version of
                 quantitative type inhabitation, as well as a complete
                 semidecision procedure for the general case of generic
                 types. We identify a simple method to handle subtyping by
                 introducing coercion functions and then erasing them in
                 the final expressions. We have implemented our technique
                 and evaluated it on over 100 examples taken from the Web.
                 The system was remarkably effective in reinventing the
                 erased expressions from the (previously unprocessed) code
                 and ranking these expressions among the top suggestions
                 for the developer. Our overall experience indicates that
                 this approach to synthesizing and suggesting code
                 fragments goes beyond currently available techniques and
                 is a useful functionality of software development
                 environments.},
   affiliation = {EPFL},
   author      = {Gvero, Tihomir and Kuncak, Viktor and Piskac, Ruzica},
   details     = {http://infoscience.epfl.ch/record/170040},
   documenturl = {http://infoscience.epfl.ch/record/170040/files/main_1.pdf},
   keywords    = {Type Inhabitation; Program Synthesis},
   oai-id      = {oai:infoscience.epfl.ch:170040},
   oai-set     = {fulltext-public},
   pagecount   = {10},
   status      = {PUBLISHED},
   submitter   = {188355; 188355},
   title       = {Code {C}ompletion using {Q}uantitative {T}ype {I}nhabitation},
   unit        = {LARA},
   year        = 2011
}

@inproceedings{demo_paper,
 author = {Gvero, Tihomir and Kuncak, Viktor and Piskac, Ruzica},
 title = {Interactive synthesis of code snippets},
 booktitle = {In CAV, pages 418â€“423},
   year       = 2011
} 

@book{russel2003ai,
    abstract = {{From the Publisher: The long-anticipated revision of this number 1 selling book offers the most comprehensive, state of the art introduction to the theory and practice of artificial intelligence for modern applications.  Intelligent Agents.  Solving Problems by Searching. Informed Search Methods.  Game Playing.  Agents that Reason Logically.  First-order Logic.  Building a Knowledge Base.  Inference in First-Order Logic.  Logical Reasoning Systems.  Practical Planning.  Planning and Acting.  Uncertainty.  Probabilistic Reasoning Systems.  Making Simple Decisions.  Making Complex Decisions. Learning from Observations.  Learning with Neural Networks.  Reinforcement Learning.  Knowledge in Learning.  Agents that Communicate.  Practical Communication in English.  Perception.  Robotics.  For computer professionals, linguists, and cognitive scientists interested in artificial intelligence.}},
    author = {Russell, Stuart and Norvig, Peter},
    citeulike-article-id = {7119973},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0136042597},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0136042597},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/359890490},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0136042597},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0136042597},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0136042597/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0136042597},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0136042597},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0136042597},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0136042597\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0136042597},
    day = {11},
    edition = {Third},
    howpublished = {Hardcover},
    isbn = {0136042597},
    month = dec,
    posted-at = {2010-07-27 18:54:54},
    priority = {2},
    publisher = {Prentice Hall},
    title = {{Artificial Intelligence: A Modern Approach}},
    year = {2009}
}


@MISC{eclipse_foundation,
title = {The Eclipse Foundation. The Eclipse Project},
url = {http://www.eclipse.org/}
} 

@book{odersky:scala,
    abstract = {{Programming in Scala is the definitive book on Scala, the new language for the
Java Platform that blends object-oriented and functional programming concepts
into a unique and powerful tool for developers.

Coauthored by the designer of the Scala language, this authoritative book will
teach you, one step at a time, the Scala language and the ideas behind it.

The book is carefully crafted to help you learn. The first few chapters will
give you enough of the basics that you can already start using Scala for
simple tasks. The entire book is organized so that each new concept builds on
concepts that came before - a series of steps that promises to help you master
the Scala language and the important ideas about programming that Scala
embodies.

A comprehensive tutorial and reference for Scala, this book covers the entire
language and important libraries.}},
    author = {Odersky, Martin and Spoon, Lex and Venners, Bill},
    citeulike-article-id = {4913791},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0981531601},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0981531601},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0981531601},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0981531601},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0981531601/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0981531601},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0981531601},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0981531601},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0981531601\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0981531601},
    day = {26},
    edition = {1St Edition},
    howpublished = {Paperback},
    isbn = {0981531601},
    keywords = {programming\_language, scala},
    month = nov,
    posted-at = {2010-12-17 19:50:06},
    priority = {0},
    publisher = {Artima Inc},
    title = {{Programming in Scala: A Comprehensive Step-by-step Guide}},
    year = {2008}
}

@MISC{scala_dev,
title = {Scala IDE team. Scala IDE developer documentation},
url = {http://scala-ide.org/docs/dev/}
} 

@inproceedings{Urzyczyn:1997:ITL:645893.671612,
 author = {Urzyczyn, Pawel},
 title = {Inhabitation in Typed Lambda-Calculi (A Syntactic Approach)},
 booktitle = {Proceedings of the Third International Conference on Typed Lambda Calculi and Applications},
 series = {TLCA '97},
 year = {1997},
 isbn = {3-540-62688-3},
 pages = {373--389},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=645893.671612},
 acmid = {671612},
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
} 

@book{Pierce:2002:TPL:509043,
 author = {Pierce, Benjamin C.},
 title = {Types and programming languages},
 year = {2002},
 isbn = {0-262-16209-1},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
} 

@techreport{Tromp:Lambda,
    author = {Tromp, John},
    citeulike-article-id = {2546450},
    keywords = {lcbbbib},
    posted-at = {2008-03-17 14:30:49},
    priority = {3},
    title = {{Binary Lambda Calculus and Combinatory Logic}},
    year = {2006}
}


@MISC{Hayoo,
title = {Hayoo! API Search},
url = {http://holumbus.fh-wedel.de/hayoo/}
} 

@MISC{Hoogle,
title = {Hoogle API Search},
url = {http://www.haskell.org/hoogle/}
} 


@MISC{Djinn,
title = {The Djinn Theorem Prover},
url = {http://www.augustsson.net/Darcs/Djinn/}
} 

@inproceedings{Mandelin:2005:JMH:1065010.1065018,
 author = {Mandelin, David and Xu, Lin and Bod\'{\i}k, Rastislav and Kimelman, Doug},
 title = {Jungloid mining: helping to navigate the API jungle},
 booktitle = {Proceedings of the 2005 ACM SIGPLAN conference on Programming language design and implementation},
 series = {PLDI '05},
 year = {2005},
 isbn = {1-59593-056-6},
 location = {Chicago, IL, USA},
 pages = {48--61},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1065010.1065018},
 doi = {10.1145/1065010.1065018},
 acmid = {1065018},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {mining, program synthesis, reuse},
} 

@article{Sahavechaphan:2006:XMS:1167515.1167508,
 author = {Sahavechaphan, Naiyana and Claypool, Kajal},
 title = {XSnippet: mining For sample code},
 journal = {SIGPLAN Not.},
 issue_date = {October 2006},
 volume = {41},
 number = {10},
 month = oct,
 year = {2006},
 issn = {0362-1340},
 pages = {413--430},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/1167515.1167508},
 doi = {10.1145/1167515.1167508},
 acmid = {1167508},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {code assistants, code mining, code reuse, ranking code samples},
} 

